You have specified two input files for short and long read data. Note that they should be mapped to the same reference, e.g. GRCh37 (hg19) or GRCh38 (hg38). If they come from different versions, for example the coordinates may not match. In such a case, use a coordinate converter beforehand.
Detect junctions in short reads...
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read010
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read011
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read012
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read013
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read014
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read015
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read016
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read017
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read018
INS: chr1	124	Forward	chr1	125	Forward	15	0	read001
INS: chr1	124	Forward	chr1	125	Forward	15	0	read002
INS: chr1	124	Forward	chr1	125	Forward	15	0	read003
INS: chr1	124	Forward	chr1	125	Forward	15	0	read004
INS: chr1	124	Forward	chr1	125	Forward	15	0	read005
INS: chr1	124	Forward	chr1	125	Forward	15	0	read006
INS: chr1	124	Forward	chr1	125	Forward	15	0	read007
INS: chr1	124	Forward	chr1	125	Forward	15	0	read008
INS: chr1	124	Forward	chr1	125	Forward	15	0	read009
INS: chr1	124	Forward	chr1	125	Forward	15	0	read010
INS: chr1	124	Forward	chr1	125	Forward	15	0	read011
INS: chr1	179	Forward	chr1	180	Forward	8	0	read013
INS: chr1	179	Forward	chr1	180	Forward	8	0	read014
INS: chr1	179	Forward	chr1	180	Forward	8	0	read015
INS: chr1	179	Forward	chr1	180	Forward	8	0	read016
INS: chr1	179	Forward	chr1	180	Forward	8	0	read017
INS: chr1	179	Forward	chr1	180	Forward	8	0	read018
Detect junctions in long reads...
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read010
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read011
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read012
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read013
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read014
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read015
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read016
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read017
DEL: chr1	56	Forward	chr1	70	Forward	0	0	read018
DUP:TANDEM: chr1	109	Forward	chr1	124	Forward	4	2	read021
2 segments describe this tandem duplication. Its length on the read is 34 and a single duplicated part has a length of 16 => tandem_dup_count = 2
Single duplication: CCCC
INS: chr1	124	Forward	chr1	125	Forward	15	0	read023
INS: chr1	124	Forward	chr1	125	Forward	15	0	read024
INS: chr1	124	Forward	chr1	125	Forward	15	0	read025
INS: chr1	124	Forward	chr1	125	Forward	15	0	read025a
Inserted bases: CCCCGGGGCCAATTT
INS: chr1	124	Forward	chr1	125	Forward	15	0	read025b
Inserted bases: CCCCGGGGCCAATTT
INS: chr1	124	Forward	chr1	125	Forward	15	0	read025c
Inserted bases: CCCCGGGGCCAATTT
BND: chr1	96	Forward	chr1	125	Forward	0	0	read027
DUP:TANDEM: chr1	180	Forward	chr1	187	Forward	7	2	read029
2 segments describe this tandem duplication. Its length on the read is 16 and a single duplicated part has a length of 8 => tandem_dup_count = 2
Single duplication: ATATATT
DUP:TANDEM: chr1	180	Forward	chr1	187	Forward	8	2	read030
2 segments describe this tandem duplication. Its length on the read is 16 and a single duplicated part has a length of 8 => tandem_dup_count = 2
Single duplication: ATATATTT
INS: chr1	179	Forward	chr1	180	Forward	8	0	read031
DUP:TANDEM: chr1	180	Forward	chr1	187	Forward	8	2	read033
2 segments describe this tandem duplication. Its length on the read is 16 and a single duplicated part has a length of 8 => tandem_dup_count = 2
Single duplication: ATATATTT
BND: chr1	180	Reverse	chr1	187	Reverse	0	0	read034
DEL: chr1	265	Forward	chr1	286	Forward	0	0	read037
DEL: chr1	265	Forward	chr1	286	Forward	0	0	read038
BND: chr1	265	Forward	chr1	286	Forward	0	0	read039
BND: chr1	282	Reverse	chr1	298	Reverse	0	0	read039
BND: chr1	266	Reverse	chr1	285	Reverse	0	0	read039
BND: chr1	265	Forward	chr1	286	Forward	0	0	read040
BND: chr1	282	Reverse	chr1	298	Reverse	0	0	read040
BND: chr1	266	Reverse	chr1	285	Reverse	0	0	read040
DEL: chr1	281	Forward	chr1	299	Forward	0	0	read041
BND: chr1	282	Reverse	chr1	298	Reverse	0	0	read041
BND: chr1	266	Reverse	chr1	285	Reverse	0	0	read041
DEL: chr1	335	Forward	chr1	350	Forward	0	0	read042
DEL: chr1	335	Forward	chr1	350	Forward	0	0	read043
DEL: chr1	335	Forward	chr1	350	Forward	0	0	read044
DEL: chr1	335	Forward	chr1	350	Forward	0	0	read045
INS: chr1	367	Forward	chr1	368	Forward	11	0	read046
INS: chr1	367	Forward	chr1	368	Forward	11	0	read047
INS: chr1	367	Forward	chr1	368	Forward	11	0	read048
INS: chr1	367	Forward	chr1	368	Forward	11	0	read049
INS: chr1	367	Forward	chr1	368	Forward	11	0	read050
DEL: chr1	383	Forward	chr1	395	Forward	0	0	read050
BND: chr1	10	Reverse	chr1	470	Reverse	0	0	read051
BND: chr1	10	Reverse	chr1	470	Reverse	0	0	read052
BND: chr1	33	Forward	chr1	471	Forward	0	0	read052
DUP:TANDEM: chr1	520	Forward	chr1	528	Forward	9	3	read053
2 segments describe this tandem duplication. Its length on the read is 30 and a single duplicated part has a length of 9 => tandem_dup_count = 3
Single duplication: ACCCGGGTA
DUP:TANDEM: chr1	508	Forward	chr1	528	Forward	9	5	read053
3 segments describe this tandem duplication. Its length on the read is 51 and a single duplicated part has a length of 9 => tandem_dup_count = 5
Single duplication: ACCCGGGTA
INS: chr1	508	Reverse	chr1	528	Reverse	6	0	read054
Inserted bases: ACCCGG
BND: chr1	520	Reverse	chr1	528	Reverse	0	0	read055
INV: chr1	579	Forward	chr1	597	Forward	17	0	read056
Inverted bases: TAGCAACTCTCCAAAAC
INV: chr1	579	Forward	chr1	597	Forward	17	0	read057
Inverted bases: TAGCAACTCTCCAAAAC
INV: chr1	579	Forward	chr1	597	Forward	17	0	read058
Inverted bases: TAGCAACTCTCCAAAAC
INV: chr1	579	Forward	chr1	597	Forward	17	0	read059
Inverted bases: TAGCAACTCTCCAAAAC
INV: chr1	579	Forward	chr1	597	Forward	17	0	read060
Inverted bases: TAGCAACTCTCCAAAAC
Start clustering...
Done with clustering. Found 21 junction clusters.
No refinement was selected.
Detected 14 SVs and 0 SNPs/Indels.
